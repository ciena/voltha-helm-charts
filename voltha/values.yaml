---
# Copyright 2019-present Open Networking Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Globally define a namespace and registry
global:
  namespace: voltha
  registry: ''

# Define connectivity to Kafka
kafka:
  adapter:
    service: cord-kafka.default.svc.cluster.local
    port: 9092
  cluster:
    service: cord-kafka.default.svc.cluster.local
    port: 9092

# Define connectivity to etcd
etcd:
  service: etcd-cluster-client.default.svc.cluster.local
  port: 2379

# WIP Define the number of read/write core pairs
rw_core:
  pairs: 2

# WIP Define the number of read-only core pairs
# (Why are these pairs and not just replicas)
ro_core:
  pairs: 1

# Define the recplica count for everything
replicas:
  vcli: 1
  ofagent: 3
  rw_core: 1
  ro_core: 1
  afrouter: 1
  afrouterd: 1
  adapter_simulated_olt: 1
  adapter_simulated_onu: 1
  onos: 1
  onu: 1

node_ports:
  vcli_port: 30110

# Define Docker images to be used
images:
  vcli:
    repository: 'volthacore/voltha-cli'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'

  ofagent:
    repository: 'volthacore/voltha-ofagent'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'
 
  ro_core:
    repository: 'volthacore/voltha-ro-core'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'
 
  rw_core:
    repository: 'volthacore/voltha-rw-core'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'
 
  afrouter:
    repository: 'volthacore/voltha-afrouter'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'

  afrouterd:
    repository: 'volthacore/voltha-afrouterd'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'
    restartPolicy: 'Always'

  envoy:
    repository: 'volthacore/voltha-envoy'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'

  adapter_simulated_olt:
    repository: 'volthacore/voltha-adapter-simulated-olt'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'

  adapter_simulated_onu:
    repository: 'volthacore/voltha-adapter-simulated-onu'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'

  onos:
    repository: 'volthacore/voltha-onos'
    tag: '1.13.5'
    pullPolicy: 'Always'

  ponsim:
    repository: 'volthacore/voltha-ponsim'
    tag: '{{ .Chart.AppVersion }}'
    pullPolicy: 'Always'

# WIP Define command line arguments for each container
vcli_args:
- "/voltha/python/cli/setup.sh"
- "-g afrouter.$(NAMESPACE).svc.cluster.local:55555"

envoy_args:
- "/usr/local/bin/envoyd"
- "-envoy-config=/envoy/config/voltha-grpc-proxy.json"
- "-kv=etcd"
- "-kv-svc-name=$(ETCD_NAME)"
- "-kv-port=2379"

ofagent_args:
- "/ofagent/ofagent/main.py"
- "-v"
- "--consul=consul.$(NAMESPACE).svc.cluster.local:8500"
- "--controller=onos.$(NAMESPACE).svc.cluster.local:6653"
- "--grpc-endpoint=afrouter.$(NAMESPACE).svc.cluster.local:55555"
- "--enable-tls"
- "--key-file=/ofagent/pki/voltha.key"
- "--cert-file=/ofagent/pki/voltha.crt"

ro_core_args:
- "/app/ro_core"
- "-kv_store_type=etcd"
- "-kv_store_host=$(ETCD_SERVICE)"
- "-kv_store_port=$(ETCD_SERVICE_PORT)"
- "-grpc_host=$(POD_IP)"
- "-grpc_port=50057"
- "-banner=true"
- "-ro_core_topic=rocore"
- "-log_level=0"

rw_core_args:
- "/app/rw_core"
- "-instance-id=$(RW_CORE_INSTANCE_ID)"
- "-kv_store_type=etcd"
- "-kv_store_host=$(ETCD_SERVICE)"
- "-kv_store_port=$(ETCD_SERVICE_PORT)"
- "-grpc_host=$(POD_IP)"
- "-grpc_port=50057"
- "-banner=true"
- "-kafka_adapter_host=$(ADAPTER_KAFKA_SERVICE)"
- "-kafka_adapter_port=$(ADAPTER_KAFKA_SERVICE_PORT)"
- "-kafka_cluster_host=$(CLUSTER_KAFKA_SERVICE)"
- "-kafka_cluster_port=$(CLUSTER_KAFKA_SERVICE_PORT)"
- "-rw_core_topic=rwcore"
- "-kv_store_data_prefix=service/voltha"
- "-in_competing_mode=true"
- "-timeout_long_request=8000"
- "-timeout_request=6000"
- "-log_level=0"

afrouter_args:
- "/app/afrouter"
- "-config"
- "/app/config/arouter.voltha.json"

afrouterd_args:
- "/app/arouterd"

