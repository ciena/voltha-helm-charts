# Copyright 2019-present Open Networking Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ro-core
  namespace: {{ .Values.global.namespace }}
  serviceAccountName: {{ .Values.global.namespace }}-serviceaccount
spec:
  replicas: {{ .Values.replicas.ro_core }}
  selector:
    matchLabels:
      app: ro-core
  template:
    metadata:
      labels:
        app: ro-core
      annotations:
        cni: "calico"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ro-core
              topologyKey: "kubernetes.io/hostname"
      namespace: {{ .Values.global.namespace }}
      serviceAccountName: {{ .Values.global.namespace }}-serviceaccount
      containers:
        - name: voltha
          image: {{ .Values.global.registry }}{{ .Values.images.ro_core.repository }}:{{ tpl .Values.images.ro_core.tag . }}
          imagePullPolicy: {{ .Values.images.ro_core.pullPolicy }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ETCD_SERVICE
              value: "{{ .Values.etcd.service }}"
            - name: ETCD_SERVICE_PORT
              value: "{{ .Values.etcd.port }}"
          args:
            - "/app/ro_core"
            - "-kv_store_type=etcd"
            - "-kv_store_host=$(ETCD_SERVICE)"
            - "-kv_store_port=$(ETCD_SERVICE_PORT)"
            - "-grpc_host=$(POD_IP)"
            - "-grpc_port=50057"
            - "-banner=true"
            - "-ro_core_topic=rocore"
            - "-log_level=0"
          ports:
            - containerPort: 50057
              name: grpc-port
